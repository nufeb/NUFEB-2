aga=solve(corr.matrix(DM,scales=1))
interpolant(DM_new[1,1],d=Obs[1:100],xold=DM,Ainv=NULL,func=RB)

interpolant(DM_new[200,],d=Obs[1:100],xold=DM,Ainv=NULL,func=RB,scales=c(1,1),give.full.list=TRUE)
interpolant.quick(DM_new,d=Obs[1:100],xold=DM,Ainv=NULL,func=RB,scales=c(1,1)) 



jitter(Obs,amount=1e-6)######to prevent numerical problems

scales=40
K=function(dd,scales=40){
B=diag(scales,nrow=length(scales))
theta=sqrt(ginv(B))
exp(-dd/theta)^2
}
LG=nrow(DM_new[1:100,22:23])
LO=nrow(DM[1:100,22:23])
ALL=rbind(DM_new[1:100,22:23],DM[1:100,22:23])
dd=as.matrix(dist(ALL))
VAR=K(dd)
##############################################
setwd("/frontiers-shared/home/noo11/test2b")
train=dat[,s,]
test=dat[,-s,]####
train=array(train,c(50*length(s),25))
test=array(test,c(50*25,25))
obs=train[,24]*10^6 #######emulation of average diameter
obs2=train[,25]*10^14    #######emulation of variance diameter
input=as.data.frame(train[,1:24])
names(input)=para

Y=obs###average
#Y=obs2###variance
DM=input[,c(1:24)]
DM_new=as.data.frame(test[,c(1:24)])
names(DM_new)=para[c(1:24)]


mod=lm(Y~.,data=DM[,-24])
lm_pred=predict(mod,newdata=DM_new,se=TRUE)
lm_pred=cbind(lm_pred$fit,lm_pred$se.fit)
Obs=mod$residual
DM=as.matrix(DM[1:120,20:23])
DM_new=as.matrix(DM_new[,20:23])
source("GP_code1.R",echo=FALSE)
GP_pred=prediction(DM,Obs[1:120],DM_new)

emulex=cbind((lm_pred[,1]+GP_pred[,1]),(lm_pred[,2]+2*GP_pred[,2]))
lammp=test[,24]*10^6;emu=emulex[,1]
prop=1-(sum((lammp-emu)^2)/sum((lammp- mean(lammp))^2))
######################################################plot


id=445:490
#id=745:790
#id=1045:1080
#id=645:675
lammps=lammp[id]
emus=emulex[,1][id]
ZZ=emulex[,2][id]
U=emus+ZZ
L=emus-ZZ
ind=order(lammps)
x1 = min(L)
x1 = min(x1,lammps)
x2 = max(U)
x2 = max(x2, lammps)

#pdf("plot1")
#jpeg("wole2")
plot(lammps[ind],lammps[ind],main="Particle mean diameter with 95% C.I",xlab="Observed 10^(-6)",ylab="Predicted 10^(-6)",lty=1,cex.lab=1.4,cex.axis=1.4,cex.main=1.4,xlim=c(x1,x2),ylim=c(x1,x2))
lines(lammps[ind],emus[ind], lty = 1,col="green")
lines(lammps[ind],U[ind], col="red",lty=1)
lines(lammps[ind],L[ind], col="red",lty=1)
legend(.6,1.3,c("Predicted","Observed","95% C.I"),fill=c("green","black","red"),bty="0",border="black",cex=1.4,horiz=FALSE)
dev.off()


test=dat
test2=data.frame(array(test,c(50*100,25)));colnames(test2)=para
lm_pred2=predict(mod,newdata=test2,se=TRUE)
lm_pred2=cbind(lm_pred2$fit,lm_pred2$se.fit)
GP_pred2=prediction(DM,Obs[1:120],as.matrix(test2[,20:23]))
pred=lm_pred2+GP_pred2
plot(test2[1:50,24],pred[1:50,1])
pr1=array(pred,c(50,100,2))
j=10
par(mfrow=c(2,2))
plot(dat[j,,23],dat[j,,24]*10^6)
lines(dat[j,,23],pr1[j,,1],col="green")
lines(dat[j,,23],pr1[j,,1]+2*pr1[j,,2],col="red")
lines(dat[j,,23],pr1[j,,1]-2*pr1[j,,2],col="red")




library(gplots)

hist(test2[1:5000,24],xlab="Particle mean diameter",prob=TRUE,main="Lammp")
hist(prediction[1:5000,1]*10^(-6),xlab="Particle mean diameter",prob=TRUE,main="Emulator")
xx=range(prediction[1:5000,1]*10^(-6)-prediction[1:5000,2]*10^(-6),
prediction[1:5000,1]*10^(-6)+prediction[1:5000,2]*10^(-6),test2[1:5000,24],prediction[1:5000,1]*10^(-6))
par(mfrow=c(2,2))
hist(test2[1:5000,24],xlab="Particle mean diameter",main="Lammp",xlim=xx)
hist(prediction[1:5000,1]*10^(-6),xlab="Particle mean diameter",main="Emulator",ylim=c(0,1500),xlim=xx)

hist(prediction[1:5000,1]*10^(-6)-prediction[1:5000,2]*10^(-6),xlab="Particle mean diameter",main="Emulator",ylim=c(0,1500),xlim=xx)
hist(prediction[1:5000,1]*10^(-6)+prediction[1:5000,2]*10^(-6),xlab="Particle mean diameter",main="Emulator",ylim=c(0,1500),xlim=xx)
FF=hist(test2[1:5000,24])
TT=hist(prediction[1:5000,1]*10^(-6))
TL=hist(prediction[1:5000,1]*10^(-6)-prediction[1:5000,2]*10^(-6))
TU=hist(prediction[1:5000,1]*10^(-6)+prediction[1:5000,2]*10^(-6))
barplot2(FF,TT,ci.l=TL,ci.u=TU,plot.ci=TRUE)


